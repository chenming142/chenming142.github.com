<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: UML设计 | chenming142's Blog for github]]></title>
  <link href="http://chenming142.github.com/blog/categories/umlshe-ji/atom.xml" rel="self"/>
  <link href="http://chenming142.github.com/"/>
  <updated>2013-03-28T23:11:28+08:00</updated>
  <id>http://chenming142.github.com/</id>
  <author>
    <name><![CDATA[Kevin Chen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[UML 建模之时序图(Sequence Diagram)]]></title>
    <link href="http://chenming142.github.com/blog/2013/03/10/sequence-diagram/"/>
    <updated>2013-03-10T15:52:00+08:00</updated>
    <id>http://chenming142.github.com/blog/2013/03/10/sequence-diagram</id>
    <content type="html"><![CDATA[<blockquote><p>原文:<a href="http://www.cnblogs.com/ywqu" title="灵动生活">http://www.cnblogs.com/ywqu</a></p></blockquote>

<p><strong>一、时序图简介（Brief introduction）</strong><br/>
<strong>二、时序图元素（Sequence Diagram Elements）</strong></p>

<blockquote><ul>
<li>角色（Actor）</li>
<li>对象（Object）</li>
<li>生命线(Lifeline)</li>
<li>控制焦点（Focus of Control）</li>
<li>消息（Message）</li>
<li>自关联消息（Self-Message）</li>
<li>Combined Fragments</li>
</ul>
</blockquote>

<p><strong>三、时序图实例分析（Sequece Diagram Example Analysis）</strong></p>

<blockquote><ul>
<li>时序图场景</li>
<li>时序图实例</li>
<li>时序图实例分析</li>
</ul>
</blockquote>

<p><strong>四、总结（Summay）</strong></p>

<!-- more -->


<h3>一、时序图简介（Brief introduction）</h3>

<p>   时序图是显示<strong>对象之间交互的图</strong>,这些<strong>对象时按时间顺序排列</strong>的。顺序图中显示的是<strong>参与交互对象之间消息交互的顺序</strong>。时序图中包括建模元素主要有:<strong>对象、控制焦点、消息</strong>等等。</p>

<h3>二、时序图元素（Sequence Diagram Elements）</h3>

<p><strong>角色</strong>：系统角色，可以是人、甚至其他的系统或子系统<br/>
<strong>对象</strong>：对象包括三中命名方式：<br/>
   1. 包括对象名和类名<br/>
   2. 只显示类名不显示对象名，即表示它是匿名对象<br/>
   3. 只显示对象名不显示类名  <br/>
<img src="/images/common/2013-03-10-sequence-diagram/3347379_1.jpg" title="Object" alt="对象的命名方式" /></p>

<p><strong>生命线</strong>：生命线在顺序图中表示从对象图片向下延伸的一条虚线,表示对象存在的时间,如下图：<img src="/images/common/2013-03-10-sequence-diagram/3347379_2.gif" title="Lifeline" alt="生命线" /></p>

<p><strong>控制焦点</strong>：控制焦点是顺序图中表示时间的符号，在这个时间段内对象执行相应的操作，用小矩形表示，如下图：<img src="/images/common/2013-03-10-sequence-diagram/3347379_3.jpg" title="Focus of Control" alt="控制焦点" /></p>

<p><strong>消息</strong>：消息一般分为同步消息（Synchronous Message），异步消息（Asynchronous Message）和返回消息（Return Message）如下图：<br/>
<img src="/images/common/2013-03-10-sequence-diagram/3347379_4.gif" title="Message" alt="消息" /></p>

<ul>
<li>同步消息 == 调用消息<br/>
消息的发送者把控制传递给消息的接收者,然后停止活动,等待消息的接受者放弃或者返回控制。用来表示<strong>同步</strong>的意义。</li>
<li>异步消息
消息的发送者通过消息把信号传递给消息的接受者,然后继续自己的活动,不等待接受者返回消息或控制。异步消息的接受者和发送者是并发工作的。</li>
<li>返回消息
返回消息表示从过程调用返回</li>
</ul>


<p><strong>自关联消息</strong> : 表示方法的自身调用以及一个对象内的一个方法调用另一个方法。如下图:<br/>
<img src="/images/common/2013-03-10-sequence-diagram/3347379_5.gif" title="Sef-Message" alt="自关联消息" /></p>

<p><strong>Combined Fragments</strong><br/>
<img src="/images/common/2013-03-10-sequence-diagram/3347379_6.gif" title="Combined Fragments" alt="Combined Fragments" /></p>

<ul>
<li>Altemative fragment(denoted "alt")与 if...then...else对应</li>
<li>Option fragment(denoted "opt")与Switch对应</li>
<li>Parallel fragment(denoted "par")表示同时发生</li>
<li>Loop fragment(denoted "loop")与for或foreach对应</li>
</ul>


<h3>三、时序图实例分析</h3>

<p><strong>时序图场景</strong><br/>
完成课程创建功能,主要流程有:<br/>
1. 请求添加课程页面,填写课程表单,点击<code>create</code>按钮<br/>
2. 添加课程信息到数据库<br/>
3. 向课程对象追加主题信息<br/>
4. 为课程指派教师<br/>
5. 完成课程创建功能</p>

<p><strong>时序图实例</strong>
<img src="/images/common/2013-03-10-sequence-diagram/3347379_7.jpg" alt="时序图实例" /></p>

<p><strong>时序图分析</strong><br/>
1. 序号1.0-1.3   完成页面的初始化<br/>
2. 序号1.4-1.5   课程管理员填充课程表单<br/>
3. 序号1.6-1.7   课程管理员点击<code>create</code>按钮,并相应点击事件<br/>
4. 序号1.8       Service 层创建课程<br/>
5. 序号1.9-1.10  添加课程到数据库,并返回课程编号CourseId<br/>
6. 序号1.11-1.12 添加课程主题到数据库,并返回主题编号topicId<br/>
7. 序号1.13      给课程指派教师 <br/>
8. 序号1.14      向界面抛创建课程成功与否的消息</p>

<h3>四、总结</h3>

<p>   时序图是显示对象之间交互顺序的图,这次对象是按时间顺序排列的.时序图中显示的是参与交互的对象及对象之间消息交互的顺序.时序图中包括的建模的元素主要有:对象、控制焦点、消息等等。</p>
]]></content>
  </entry>
  
</feed>
