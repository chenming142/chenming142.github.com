<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: J2SE | chenming142's Blog for github]]></title>
  <link href="http://chenming142.github.com/tags/j2se/atom.xml" rel="self"/>
  <link href="http://chenming142.github.com/"/>
  <updated>2013-03-23T11:45:41+08:00</updated>
  <id>http://chenming142.github.com/</id>
  <author>
    <name><![CDATA[Kevin Chen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[20个非常有用的java程序片段]]></title>
    <link href="http://chenming142.github.com/blog/2013/03/10/20-useful-snippets-of-java-program/"/>
    <updated>2013-03-10T10:18:00+08:00</updated>
    <id>http://chenming142.github.com/blog/2013/03/10/20-useful-snippets-of-java-program</id>
    <content type="html"><![CDATA[<blockquote><p>原文地址是:<a href="http://coolshell.cn/articles/889.html" title="酷壳-CoolShell.cn">http://coolshell.cn/articles/889.html</a></p></blockquote>

<p>下面是20个非常有用的Java程序片段，希望能对你有用。</p>

<p>1.字符串有整型的相互转换</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="n">string</span> <span class="n">a</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>             <span class="c1">// integer to numeric string</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>              <span class="c1">// numeric string to an int</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>2.向文件末尾添加内容</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="n">BufferWriter</span> <span class="n">out</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="k">try</span><span class="o">{</span>
</span><span class='line'>        <span class="n">out</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferWriter</span><span class="o">(</span><span class="k">new</span> <span class="n">FileWriter</span><span class="o">(</span><span class="s">&quot;filename&quot;</span><span class="o">,</span> <span class="kc">true</span><span class="o">));</span>
</span><span class='line'>        <span class="n">out</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">&quot;aString&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">){</span>
</span><span class='line'>        <span class="c1">// error processing code</span>
</span><span class='line'>    <span class="o">}</span><span class="k">finally</span><span class="o">{</span>
</span><span class='line'>        <span class="k">if</span><span class="o">(</span><span class="n">out</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
</span><span class='line'>            <span class="n">out</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>3.得到当前方法的名称
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="n">string</span> <span class="n">methodName</span> <span class="o">=</span> <span class="n">Thread</span><span class="o">.</span><span class="na">currentThread</span><span class="o">().</span><span class="na">getStackTrace</span><span class="o">()[</span><span class="mi">1</span><span class="o">].</span><span class="na">getMethodName</span><span class="o">();</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>4.转字符串到日期格式
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">Date</span> <span class="o">=</span> <span class="n">java</span><span class="o">.</span><span class="na">text</span><span class="o">.</span><span class="na">DateFormat</span><span class="o">.</span><span class="na">getDateInstance</span><span class="o">().</span><span class="na">parse</span><span class="o">(</span><span class="n">date</span><span class="o">,</span> <span class="n">String</span><span class="o">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
或者是: <br/>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="n">SimpleDateFormat</span> <span class="n">sdf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleDateFormat</span><span class="o">(</span><span class="s">&quot;dd.MM.yyyy&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Date</span> <span class="n">d</span> <span class="o">=</span> <span class="n">sdf</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span> <span class="n">myString</span> <span class="o">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>5.使用JDBC连接Oracle
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span>    <span class="kr">public</span> <span class="kr">class</span> <span class="nx">OracleJDBCTest</span><span class="p">{</span>
</span><span class='line'>      <span class="nb">String</span> <span class="nx">driverClass</span> <span class="o">=</span> <span class="s2">&quot;oracle.jdbc.driver.OracleDriver&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">Connection</span> <span class="nx">con</span><span class="p">;</span>
</span><span class='line'>      <span class="kr">public</span> <span class="k">void</span> <span class="nx">init</span><span class="p">(</span><span class="nx">FileInputStream</span> <span class="nx">fs</span><span class="p">)</span> <span class="kr">throws</span> <span class="nx">ClassNotFoundException</span><span class="p">,</span> <span class="nx">SQLException</span><span class="p">,</span>
</span><span class='line'>         <span class="nx">FileNotFoundException</span><span class="p">,</span> <span class="nx">IOException</span><span class="p">{</span>
</span><span class='line'>            <span class="nx">Properties</span> <span class="nx">props</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Properties</span><span class="p">();</span>
</span><span class='line'>            <span class="nx">props</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="nx">fs</span><span class="p">);</span>
</span><span class='line'>            <span class="nb">String</span> <span class="nx">url</span> <span class="o">=</span> <span class="nx">props</span><span class="p">.</span><span class="nx">getProperty</span><span class="p">(</span><span class="s2">&quot;db.url&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="nb">String</span> <span class="nx">username</span> <span class="o">=</span> <span class="nx">props</span><span class="p">.</span><span class="nx">getProperty</span><span class="p">(</span><span class="s2">&quot;db.username&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="nb">String</span> <span class="nx">password</span> <span class="o">=</span> <span class="nx">props</span><span class="p">.</span><span class="nx">getProperty</span><span class="p">(</span><span class="s2">&quot;db.password&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">Class</span><span class="p">.</span><span class="nx">forName</span><span class="p">(</span><span class="nx">driverClass</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">con</span> <span class="o">=</span> <span class="nx">DriverManager</span><span class="p">.</span><span class="nx">getConnection</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">username</span><span class="p">,</span> <span class="nx">password</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="kr">public</span> <span class="k">void</span> <span class="nx">fetch</span><span class="p">()</span> <span class="kr">throws</span> <span class="nx">SQLException</span><span class="p">,</span> <span class="nx">IOException</span><span class="p">{</span>
</span><span class='line'>            <span class="nx">PreparedStatement</span> <span class="nx">ps</span> <span class="o">=</span> <span class="nx">con</span><span class="p">.</span><span class="nx">prePareStatement</span><span class="p">(</span><span class="s2">&quot;select SYSDATE from dual&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">ResultSet</span> <span class="nx">rs</span> <span class="o">=</span> <span class="nx">ps</span><span class="p">.</span><span class="nx">executeQuery</span><span class="p">();</span>
</span><span class='line'>            <span class="k">while</span><span class="p">(</span><span class="nx">rs</span><span class="p">.</span><span class="nx">next</span><span class="p">()){</span>
</span><span class='line'>                <span class="c1">// do the things you do</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="nx">rs</span><span class="p">.</span><span class="nx">close</span><span class="p">();</span>
</span><span class='line'>            <span class="nx">ps</span><span class="p">.</span><span class="nx">close</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="kr">public</span> <span class="kr">static</span> <span class="k">void</span> <span class="nx">main</span><span class="p">(</span><span class="nb">String</span><span class="p">[]</span> <span class="nx">args</span><span class="p">){</span>
</span><span class='line'>            <span class="nx">OracleJDBCTest</span> <span class="nx">test</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">OracleJDBCTest</span><span class="p">();</span>
</span><span class='line'>            <span class="nx">test</span><span class="p">.</span><span class="nx">init</span><span class="p">();</span>
</span><span class='line'>            <span class="nx">test</span><span class="p">.</span><span class="nx">fetch</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<!-- more -->


<p>6.把java.util.Date 转换成java.sql.Date
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span>    <span class="nx">java</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nb">Date</span> <span class="nx">utilDate</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">java</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nb">Date</span><span class="p">();</span>
</span><span class='line'>    <span class="nx">java</span><span class="p">.</span><span class="nx">sql</span><span class="p">.</span><span class="nb">Date</span> <span class="nx">sqlDate</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">java</span><span class="p">.</span><span class="nx">sql</span><span class="p">.</span><span class="nb">Date</span><span class="p">(</span><span class="nx">utilDate</span><span class="p">.</span><span class="nx">getTime</span><span class="p">());</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>7.使用NIO进行快速的文件拷贝
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span>    <span class="kr">public</span> <span class="kr">static</span> <span class="k">void</span> <span class="nx">fileCopy</span><span class="p">(</span> <span class="nx">File</span> <span class="k">in</span> <span class="p">,</span> <span class="nx">File</span> <span class="nx">out</span> <span class="p">)</span><span class="kr">throws</span> <span class="nx">IOException</span><span class="p">{</span>
</span><span class='line'>        <span class="nx">FileChannel</span> <span class="nx">inChannel</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FileInputStream</span><span class="p">(</span> <span class="k">in</span> <span class="p">).</span><span class="nx">getChannel</span><span class="p">();</span>
</span><span class='line'>        <span class="nx">FileChannel</span> <span class="nx">outChannel</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FileOutputStream</span><span class="p">(</span> <span class="k">in</span> <span class="p">).</span><span class="nx">getChannel</span><span class="p">();</span>
</span><span class='line'>        <span class="k">try</span><span class="p">{</span>
</span><span class='line'>            <span class="c1">// inChannel.transferTo(0, inChannel.size(), outChannel); </span>
</span><span class='line'>            <span class="c1">// original -- apparently has trouble copying large files on Windows</span>
</span><span class='line'>            <span class="c1">// magic number for Windows, 64Mb - 32Kb)</span>
</span><span class='line'>            <span class="kr">int</span> <span class="nx">maxCount</span> <span class="o">=</span> <span class="p">(</span><span class="mi">64</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="p">)</span> <span class="o">-</span> <span class="p">(</span><span class="mi">32</span> <span class="o">*</span> <span class="mi">1024</span><span class="p">);</span>
</span><span class='line'>            <span class="kr">long</span> <span class="nx">size</span> <span class="o">=</span> <span class="nx">inChannel</span><span class="p">.</span><span class="nx">size</span><span class="p">();</span>
</span><span class='line'>            <span class="kr">long</span> <span class="nx">position</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="k">while</span> <span class="p">(</span> <span class="nx">position</span> <span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span> <span class="nx">size</span> <span class="p">){</span>
</span><span class='line'>                <span class="nx">position</span> <span class="o">+=</span> <span class="nx">inChannel</span><span class="p">.</span><span class="nx">transferTo</span><span class="p">(</span> <span class="nx">position</span><span class="p">,</span> <span class="nx">maxCount</span><span class="p">,</span> <span class="nx">outChannel</span> <span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span><span class="k">finally</span><span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span> <span class="nx">inChannel</span> <span class="o">!=</span> <span class="kc">null</span> <span class="p">){</span>
</span><span class='line'>                <span class="nx">inChannel</span><span class="p">.</span><span class="nx">close</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span> <span class="nx">outChannel</span> <span class="o">!=</span> <span class="kc">null</span> <span class="p">){</span>
</span><span class='line'>                <span class="nx">outChannel</span><span class="p">.</span><span class="nx">close</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>8.创建图片的缩略图
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="kd">private</span> <span class="kt">void</span> <span class="n">createThumbnail</span><span class="o">(</span><span class="n">String</span> <span class="n">filename</span><span class="o">,</span> <span class="kt">int</span> <span class="n">thumbWidth</span><span class="o">,</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">thumbHeight</span><span class="o">,</span> <span class="kt">int</span> <span class="n">quality</span><span class="o">,</span> <span class="n">String</span> <span class="n">outFilename</span><span class="o">)</span>
</span><span class='line'>        <span class="kd">throws</span> <span class="n">InterruptedException</span><span class="o">,</span> <span class="n">FileNotFoundException</span><span class="o">,</span> <span class="n">IOException</span><span class="o">{</span>
</span><span class='line'>        <span class="c1">// load image from filename  </span>
</span><span class='line'>        <span class="n">Image</span> <span class="n">image</span> <span class="o">=</span> <span class="n">Toolkit</span><span class="o">.</span><span class="na">getDefaultToolkit</span><span class="o">().</span><span class="na">getImage</span><span class="o">(</span><span class="n">filename</span><span class="o">);</span>
</span><span class='line'>        <span class="n">MediaTracker</span> <span class="n">mediaTracker</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MediaTracker</span><span class="o">(</span><span class="k">new</span> <span class="n">Container</span><span class="o">());</span>
</span><span class='line'>        <span class="n">mediaTracker</span><span class="o">.</span><span class="na">addImage</span><span class="o">(</span><span class="n">image</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>        <span class="n">mediaTracker</span><span class="o">.</span><span class="na">waitForID</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">// test for errors at this point: System.out.println(mediaTracker.isErrorAny());  </span>
</span><span class='line'>        <span class="c1">// determine thumbnail size from WIDTH and HEIGHT  </span>
</span><span class='line'>        <span class="kt">double</span> <span class="n">thumbRatio</span> <span class="o">=</span> <span class="o">(</span><span class="kt">double</span><span class="o">)</span><span class="n">thumbWidth</span> <span class="o">/</span> <span class="o">(</span><span class="kt">double</span><span class="o">)</span><span class="n">thumbHeight</span><span class="o">;</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">imageWidth</span> <span class="o">=</span> <span class="n">image</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">imageHeight</span> <span class="o">=</span> <span class="n">image</span><span class="o">.</span><span class="na">getHeight</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'>        <span class="kt">double</span> <span class="n">imageRatio</span> <span class="o">=</span> <span class="o">(</span><span class="kt">double</span><span class="o">)</span><span class="n">imageWidth</span> <span class="o">/</span> <span class="o">(</span><span class="kt">double</span><span class="o">)</span><span class="n">imageHeight</span><span class="o">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">thumbRatio</span> <span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span> <span class="n">imageRatio</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">thumbHeight</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)(</span><span class="n">thumbWidth</span> <span class="o">/</span> <span class="n">imageRatio</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">thumbWidth</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)(</span><span class="n">thumbHeight</span> <span class="o">*</span> <span class="n">imageRatio</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// draw original image to thumbnail image object and  </span>
</span><span class='line'>        <span class="c1">// scale it to the new size on-the-fly  </span>
</span><span class='line'>        <span class="n">BufferedImage</span> <span class="n">thumbImage</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedImage</span><span class="o">(</span><span class="n">thumbWidth</span><span class="o">,</span>
</span><span class='line'>            <span class="n">thumbHeight</span><span class="o">,</span> <span class="n">BufferedImage</span><span class="o">.</span><span class="na">TYPE_INT_RGB</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Graphics2D</span> <span class="n">graphics2D</span> <span class="o">=</span> <span class="n">thumbImage</span><span class="o">.</span><span class="na">createGraphics</span><span class="o">();</span>
</span><span class='line'>        <span class="n">graphics2D</span><span class="o">.</span><span class="na">setRenderingHint</span><span class="o">(</span><span class="n">RenderingHints</span><span class="o">.</span><span class="na">KEY_INTERPOLATION</span><span class="o">,</span>
</span><span class='line'>            <span class="n">RenderingHints</span><span class="o">.</span><span class="na">VALUE_INTERPOLATION_BILINEAR</span><span class="o">);</span>
</span><span class='line'>        <span class="n">graphics2D</span><span class="o">.</span><span class="na">drawImage</span><span class="o">(</span><span class="n">image</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">thumbWidth</span><span class="o">,</span> <span class="n">thumbHeight</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// save thumbnail image to outFilename  </span>
</span><span class='line'>        <span class="n">BufferedOutputStream</span> <span class="n">out</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedOutputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">outFilename</span><span class="o">));</span>
</span><span class='line'>        <span class="n">JPEGImageEncoder</span> <span class="n">encoder</span> <span class="o">=</span> <span class="n">JPEGCodec</span><span class="o">.</span><span class="na">createJPEGEncoder</span><span class="o">(</span><span class="n">out</span><span class="o">);</span>
</span><span class='line'>        <span class="n">JPEGEncodeParam</span> <span class="n">param</span> <span class="o">=</span> <span class="n">encoder</span><span class="o">.</span><span class="na">getDefaultJPEGEncodeParam</span><span class="o">(</span><span class="n">thumbImage</span><span class="o">);</span>
</span><span class='line'>        <span class="n">quality</span> <span class="o">=</span> <span class="n">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">quality</span><span class="o">,</span> <span class="mi">100</span><span class="o">));</span>
</span><span class='line'>        <span class="n">param</span><span class="o">.</span><span class="na">setQuality</span><span class="o">((</span><span class="kt">float</span><span class="o">)</span><span class="n">quality</span> <span class="o">/</span> <span class="mf">100.0f</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class='line'>        <span class="n">encoder</span><span class="o">.</span><span class="na">setJPEGEncodeParam</span><span class="o">(</span><span class="n">param</span><span class="o">);</span>
</span><span class='line'>        <span class="n">encoder</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">thumbImage</span><span class="o">);</span>
</span><span class='line'>        <span class="n">out</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>9.创建 JSON 格式的数据
请先阅读这篇文章 了解一些细节，并下面这个JAR 文件：<a href="http://viralpatel.net/blogs/download/json/json-rpc-1.0.jar" title="json-rpc-1.0">json-rpc-1.0.jar (75 kb)</a>;
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span>    <span class="kr">import</span> <span class="nx">org</span><span class="p">.</span><span class="nx">json</span><span class="p">.</span><span class="nx">JSONObject</span><span class="p">;</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'>    <span class="nx">JSONObject</span> <span class="nx">json</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">JSONObject</span><span class="p">();</span>
</span><span class='line'>    <span class="nx">json</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;city&quot;</span><span class="p">,</span> <span class="s2">&quot;Mumbai&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">json</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;country&quot;</span><span class="p">,</span> <span class="s2">&quot;India&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'>    <span class="nb">String</span> <span class="nx">output</span> <span class="o">=</span> <span class="nx">json</span><span class="p">.</span><span class="nx">toString</span><span class="p">();</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>10.使用iText JAR生成PDF
阅读这篇<a href="http://viralpatel.net/blogs/generate-pdf-file-in-java-using-itext-jar/" title="PDF Generation in Java using iText JAR">文章</a> 了解更多细节
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.io.FileOutputStream</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.io.OutputStream</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">com.lowagie.text.Document</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">com.lowagie.text.Paragraph</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">com.lowagie.text.pdf.PdfWriter</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">GeneratePDF</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">OutputStream</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">&quot;C:\\Test.pdf&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">Document</span> <span class="n">document</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Document</span><span class="o">();</span>
</span><span class='line'>                <span class="n">PdfWriter</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="n">document</span><span class="o">,</span> <span class="n">file</span><span class="o">);</span>
</span><span class='line'>                <span class="n">document</span><span class="o">.</span><span class="na">open</span><span class="o">();</span>
</span><span class='line'>                <span class="n">document</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Paragraph</span><span class="o">(</span><span class="s">&quot;Hello Kiran&quot;</span><span class="o">));</span>
</span><span class='line'>                <span class="n">document</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Paragraph</span><span class="o">(</span><span class="k">new</span> <span class="n">Date</span><span class="o">().</span><span class="na">toString</span><span class="o">()));</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">document</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>                <span class="n">file</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>11.HTTP 代理设置
阅读这篇 <a href="http://viralpatel.net/blogs/http-proxy-setting-java-setting-proxy-java/" title="HTTP Proxy setting in Java. Setting up proxy.">文章</a> 了解更多细节。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="n">System</span><span class="o">.</span><span class="na">getProperties</span><span class="o">().</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;http.proxyHost&quot;</span><span class="o">,</span> <span class="s">&quot;someProxyURL&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">getProperties</span><span class="o">().</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;http.proxyPort&quot;</span><span class="o">,</span> <span class="s">&quot;someProxyPort&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">getProperties</span><span class="o">().</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;http.proxyUser&quot;</span><span class="o">,</span> <span class="s">&quot;someUserName&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">getProperties</span><span class="o">().</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;http.proxyPassword&quot;</span><span class="o">,</span> <span class="s">&quot;somePassword&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>12.单实例Singleton 示例
请先阅读这篇<a href="http://viralpatel.net/blogs/java-singleton-design-pattern-tutorial-example-singleton-j2ee-design-pattern/" title="Java Singleton design pattern tutorial.">文章</a> 了解更多信息
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">SimpleSingleton</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">private</span> <span class="kd">static</span> <span class="n">SimpleSingleton</span> <span class="n">singleInstance</span> <span class="o">=</span>  <span class="k">new</span> <span class="n">SimpleSingleton</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//Marking default constructor private  </span>
</span><span class='line'>        <span class="c1">//to avoid direct instantiation.  </span>
</span><span class='line'>        <span class="kd">private</span> <span class="nf">SimpleSingleton</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//Get instance for class SimpleSingleton  </span>
</span><span class='line'>        <span class="kd">public</span> <span class="kd">static</span> <span class="n">SimpleSingleton</span> <span class="nf">getInstance</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">return</span> <span class="n">singleInstance</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
或另一种实现方式
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="kd">public</span> <span class="kd">enum</span> <span class="n">SimpleSingleton</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">INSTANCE</span><span class="o">;</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">doSomething</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//Call the method from Singleton:  </span>
</span><span class='line'>    <span class="n">SimpleSingleton</span><span class="o">.</span><span class="na">INSTANCE</span><span class="o">.</span><span class="na">doSomething</span><span class="o">();</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>13.抓屏程序
阅读这篇<a href="http://viralpatel.net/blogs/how-to-take-screen-shots-in-java-taking-screenshots-java/" title="How to take screen shots in Java">文章</a> 获得更多信息。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="kn">import</span> <span class="nn">java.awt.Dimension</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.awt.Rectangle</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.awt.Robot</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.awt.Toolkit</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.awt.image.BufferedImage</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.imageio.ImageIO</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">captureScreen</span><span class="o">(</span><span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>       <span class="n">Dimension</span> <span class="n">screenSize</span> <span class="o">=</span> <span class="n">Toolkit</span><span class="o">.</span><span class="na">getDefaultToolkit</span><span class="o">().</span><span class="na">getScreenSize</span><span class="o">();</span>
</span><span class='line'>       <span class="n">Rectangle</span> <span class="n">screenRectangle</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="o">(</span><span class="n">screenSize</span><span class="o">);</span>
</span><span class='line'>       <span class="n">Robot</span> <span class="n">robot</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Robot</span><span class="o">();</span>
</span><span class='line'>       <span class="n">BufferedImage</span> <span class="n">image</span> <span class="o">=</span> <span class="n">robot</span><span class="o">.</span><span class="na">createScreenCapture</span><span class="o">(</span><span class="n">screenRectangle</span><span class="o">);</span>
</span><span class='line'>       <span class="n">ImageIO</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">image</span><span class="o">,</span> <span class="s">&quot;png&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">fileName</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>14.列出文件和目录
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="n">File</span> <span class="n">dir</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">&quot;directoryName&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">String</span><span class="o">[]</span> <span class="n">children</span> <span class="o">=</span> <span class="n">dir</span><span class="o">.</span><span class="na">list</span><span class="o">();</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">children</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="c1">// Either dir does not exist or is not a directory  </span>
</span><span class='line'>    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span> <span class="n">children</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>          <span class="c1">// Get filename of file or directory  </span>
</span><span class='line'>          <span class="n">String</span> <span class="n">filename</span> <span class="o">=</span> <span class="n">children</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// It is also possible to filter the list of returned files.  </span>
</span><span class='line'>    <span class="c1">// This example does not return any files that start with &#39;.&#39;.  </span>
</span><span class='line'>    <span class="n">FilenameFilter</span> <span class="n">filter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FilenameFilter</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">accept</span><span class="o">(</span><span class="n">File</span> <span class="n">dir</span><span class="o">,</span> <span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="o">!</span><span class="n">name</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">&quot;.&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">};</span>
</span><span class='line'>    <span class="n">children</span> <span class="o">=</span> <span class="n">dir</span><span class="o">.</span><span class="na">list</span><span class="o">(</span><span class="n">filter</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// The list of files can also be retrieved as File objects  </span>
</span><span class='line'>    <span class="n">File</span><span class="o">[]</span> <span class="n">files</span> <span class="o">=</span> <span class="n">dir</span><span class="o">.</span><span class="na">listFiles</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// This filter only returns directories  </span>
</span><span class='line'>    <span class="n">FileFilter</span> <span class="n">fileFilter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileFilter</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">accept</span><span class="o">(</span><span class="n">File</span> <span class="n">file</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">file</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">};</span>
</span><span class='line'>    <span class="n">files</span> <span class="o">=</span> <span class="n">dir</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>15.创建ZIP和JAR文件
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="kn">import</span> <span class="nn">java.util.zip.*</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">ZipIt</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">args</span><span class="o">[])</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="na">length</span> <span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;usage: java ZipIt Zip.zip file1 file2 file3&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(-</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">File</span> <span class="n">zipFile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">args</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">zipFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Zip file already exists, please try another&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(-</span><span class="mi">2</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">FileOutputStream</span> <span class="n">fos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">zipFile</span><span class="o">);</span>
</span><span class='line'>            <span class="n">ZipOutputStream</span> <span class="n">zos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ZipOutputStream</span><span class="o">(</span><span class="n">fos</span><span class="o">);</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">bytesRead</span><span class="o">;</span>
</span><span class='line'>            <span class="kt">byte</span><span class="o">[]</span> <span class="n">buffer</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">1024</span><span class="o">];</span>
</span><span class='line'>            <span class="n">CRC32</span> <span class="n">crc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CRC32</span><span class="o">();</span>
</span><span class='line'>            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">,</span> <span class="n">n</span><span class="o">=</span><span class="n">args</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">args</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
</span><span class='line'>                <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(!</span><span class="n">file</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Skipping: &quot;</span> <span class="o">+</span> <span class="n">name</span><span class="o">);</span>
</span><span class='line'>                    <span class="k">continue</span><span class="o">;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="n">BufferedInputStream</span> <span class="n">bis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedInputStream</span><span class="o">(</span>
</span><span class='line'>                    <span class="k">new</span> <span class="nf">FileInputStream</span><span class="o">(</span><span class="n">file</span><span class="o">));</span>
</span><span class='line'>                <span class="n">crc</span><span class="o">.</span><span class="na">reset</span><span class="o">();</span>
</span><span class='line'>                <span class="k">while</span> <span class="o">((</span><span class="n">bytesRead</span> <span class="o">=</span> <span class="n">bis</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">buffer</span><span class="o">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">crc</span><span class="o">.</span><span class="na">update</span><span class="o">(</span><span class="n">buffer</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">bytesRead</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="n">bis</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>                <span class="c1">// Reset to beginning of input stream  </span>
</span><span class='line'>                <span class="n">bis</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedInputStream</span><span class="o">(</span>
</span><span class='line'>                    <span class="k">new</span> <span class="nf">FileInputStream</span><span class="o">(</span><span class="n">file</span><span class="o">));</span>
</span><span class='line'>                <span class="n">ZipEntry</span> <span class="n">entry</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ZipEntry</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
</span><span class='line'>                <span class="n">entry</span><span class="o">.</span><span class="na">setMethod</span><span class="o">(</span><span class="n">ZipEntry</span><span class="o">.</span><span class="na">STORED</span><span class="o">);</span>
</span><span class='line'>                <span class="n">entry</span><span class="o">.</span><span class="na">setCompressedSize</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
</span><span class='line'>                <span class="n">entry</span><span class="o">.</span><span class="na">setSize</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
</span><span class='line'>                <span class="n">entry</span><span class="o">.</span><span class="na">setCrc</span><span class="o">(</span><span class="n">crc</span><span class="o">.</span><span class="na">getValue</span><span class="o">());</span>
</span><span class='line'>                <span class="n">zos</span><span class="o">.</span><span class="na">putNextEntry</span><span class="o">(</span><span class="n">entry</span><span class="o">);</span>
</span><span class='line'>                <span class="k">while</span> <span class="o">((</span><span class="n">bytesRead</span> <span class="o">=</span> <span class="n">bis</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">buffer</span><span class="o">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">zos</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">buffer</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">bytesRead</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="n">bis</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">zos</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>16.解析/读取XML 文件<br/>
XML文件:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>XML Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>    <span class="ni">&amp;lt;</span>?xml version=&quot;1.0&quot;?<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>students<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>student<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>name<span class="ni">&amp;gt;</span>John<span class="ni">&amp;lt;</span>/name<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>grade<span class="ni">&amp;gt;</span>B<span class="ni">&amp;lt;</span>/grade<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>age<span class="ni">&amp;gt;</span>12<span class="ni">&amp;lt;</span>/age<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/student<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>student<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>name<span class="ni">&amp;gt;</span>Mary<span class="ni">&amp;lt;</span>/name<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>grade<span class="ni">&amp;gt;</span>A<span class="ni">&amp;lt;</span>/grade<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>age<span class="ni">&amp;gt;</span>11<span class="ni">&amp;lt;</span>/age<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/student<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>student<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>name<span class="ni">&amp;gt;</span>Simon<span class="ni">&amp;lt;</span>/name<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>grade<span class="ni">&amp;gt;</span>A<span class="ni">&amp;lt;</span>/grade<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>age<span class="ni">&amp;gt;</span>18<span class="ni">&amp;lt;</span>/age<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/student<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/students<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
Java代码:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="kn">package</span> <span class="n">net</span><span class="o">.</span><span class="na">viralpatel</span><span class="o">.</span><span class="na">java</span><span class="o">.</span><span class="na">xmlparser</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilder</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.xml.parsers.DocumentBuilderFactory</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">org.w3c.dom.Document</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">org.w3c.dom.Element</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">org.w3c.dom.Node</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">org.w3c.dom.NodeList</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">XMLParser</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">getAllUserNames</span><span class="o">(</span><span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">DocumentBuilderFactory</span> <span class="n">dbf</span> <span class="o">=</span> <span class="n">DocumentBuilderFactory</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
</span><span class='line'>                <span class="n">DocumentBuilder</span> <span class="n">db</span> <span class="o">=</span> <span class="n">dbf</span><span class="o">.</span><span class="na">newDocumentBuilder</span><span class="o">();</span>
</span><span class='line'>                <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">fileName</span><span class="o">);</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">Document</span> <span class="n">doc</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
</span><span class='line'>                    <span class="n">Element</span> <span class="n">docEle</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="na">getDocumentElement</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>                    <span class="c1">// Print root element of the document  </span>
</span><span class='line'>                    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Root element of the document: &quot;</span> <span class="o">+</span> <span class="n">docEle</span><span class="o">.</span><span class="na">getNodeName</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>                    <span class="n">NodeList</span> <span class="n">studentList</span> <span class="o">=</span> <span class="n">docEle</span><span class="o">.</span><span class="na">getElementsByTagName</span><span class="o">(</span><span class="s">&quot;student&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                    <span class="c1">// Print total student elements in document  </span>
</span><span class='line'>                    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Total students: &quot;</span> <span class="o">+</span> <span class="n">studentList</span><span class="o">.</span><span class="na">getLength</span><span class="o">());</span>
</span><span class='line'>                    <span class="k">if</span> <span class="o">(</span><span class="n">studentList</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;</span><span class="n">amp</span><span class="o">;&amp;</span><span class="n">amp</span><span class="o">;</span> <span class="n">studentList</span><span class="o">.</span><span class="na">getLength</span><span class="o">()</span> <span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span> <span class="n">studentList</span><span class="o">.</span><span class="na">getLength</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">Node</span> <span class="n">node</span> <span class="o">=</span> <span class="n">studentList</span><span class="o">.</span><span class="na">item</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>                            <span class="k">if</span> <span class="o">(</span><span class="n">node</span><span class="o">.</span><span class="na">getNodeType</span><span class="o">()</span> <span class="o">==</span> <span class="n">Node</span><span class="o">.</span><span class="na">ELEMENT_NODE</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;=====================&quot;</span><span class="o">);</span>
</span><span class='line'>                                <span class="n">Element</span> <span class="n">e</span> <span class="o">=</span> <span class="o">(</span><span class="n">Element</span><span class="o">)</span> <span class="n">node</span><span class="o">;</span>
</span><span class='line'>                                <span class="n">NodeList</span> <span class="n">nodeList</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="na">getElementsByTagName</span><span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">);</span>
</span><span class='line'>                                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Name: &quot;</span>
</span><span class='line'>                                        <span class="o">+</span> <span class="n">nodeList</span><span class="o">.</span><span class="na">item</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">getChildNodes</span><span class="o">().</span><span class="na">item</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">getNodeValue</span><span class="o">());</span>
</span><span class='line'>                                <span class="n">nodeList</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="na">getElementsByTagName</span><span class="o">(</span><span class="s">&quot;grade&quot;</span><span class="o">);</span>
</span><span class='line'>                                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Grade: &quot;</span>
</span><span class='line'>                                        <span class="o">+</span> <span class="n">nodeList</span><span class="o">.</span><span class="na">item</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">getChildNodes</span><span class="o">().</span><span class="na">item</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">getNodeValue</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>                                <span class="n">nodeList</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="na">getElementsByTagName</span><span class="o">(</span><span class="s">&quot;age&quot;</span><span class="o">);</span>
</span><span class='line'>                                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Age: &quot;</span>
</span><span class='line'>                                        <span class="o">+</span> <span class="n">nodeList</span><span class="o">.</span><span class="na">item</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">getChildNodes</span><span class="o">().</span><span class="na">item</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">getNodeValue</span><span class="o">());</span>
</span><span class='line'>                            <span class="o">}</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">XMLParser</span> <span class="n">parser</span> <span class="o">=</span> <span class="k">new</span> <span class="n">XMLParser</span><span class="o">();</span>
</span><span class='line'>            <span class="n">parser</span><span class="o">.</span><span class="na">getAllUserNames</span><span class="o">(</span><span class="s">&quot;c:\\test.xml&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>17.把 Array 转换成 Map
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">org.apache.commons.lang.ArrayUtils</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">String</span><span class="o">[][]</span> <span class="n">countries</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>                <span class="o">{</span> <span class="s">&quot;United States&quot;</span><span class="o">,</span> <span class="s">&quot;New York&quot;</span> <span class="o">},</span>
</span><span class='line'>                <span class="o">{</span> <span class="s">&quot;United Kingdom&quot;</span><span class="o">,</span> <span class="s">&quot;London&quot;</span> <span class="o">},</span>
</span><span class='line'>                <span class="o">{</span> <span class="s">&quot;Netherland&quot;</span><span class="o">,</span> <span class="s">&quot;Amsterdam&quot;</span> <span class="o">},</span>
</span><span class='line'>                <span class="o">{</span> <span class="s">&quot;Japan&quot;</span><span class="o">,</span> <span class="s">&quot;Tokyo&quot;</span> <span class="o">},</span>
</span><span class='line'>                <span class="o">{</span> <span class="s">&quot;France&quot;</span><span class="o">,</span> <span class="s">&quot;Paris&quot;</span> <span class="o">}</span>
</span><span class='line'>        <span class="o">};</span>
</span><span class='line'>        <span class="n">Map</span> <span class="n">countryCapitals</span> <span class="o">=</span> <span class="n">ArrayUtils</span><span class="o">.</span><span class="na">toMap</span><span class="o">(</span><span class="n">countries</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Capital of Japan is &quot;</span> <span class="o">+</span> <span class="n">countryCapitals</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;Japan&quot;</span><span class="o">));</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Capital of France is &quot;</span> <span class="o">+</span> <span class="n">countryCapitals</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;France&quot;</span><span class="o">));</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>18.发送邮件
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="kn">import</span> <span class="nn">javax.mail.*</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.mail.internet.*</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">postMail</span><span class="o">(</span> <span class="n">String</span> <span class="n">recipients</span><span class="o">[</span> <span class="o">],</span> <span class="n">String</span> <span class="n">subject</span><span class="o">,</span> <span class="n">String</span> <span class="n">message</span> <span class="o">,</span> <span class="n">String</span> <span class="n">from</span><span class="o">)</span>
</span><span class='line'>     <span class="kd">throws</span> <span class="n">MessagingException</span> <span class="o">{</span>
</span><span class='line'>        <span class="kt">boolean</span> <span class="n">debug</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>         <span class="c1">//Set the host smtp address  </span>
</span><span class='line'>         <span class="n">Properties</span> <span class="n">props</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>
</span><span class='line'>         <span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;mail.smtp.host&quot;</span><span class="o">,</span> <span class="s">&quot;smtp.example.com&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// create some properties and get the default Session  </span>
</span><span class='line'>        <span class="n">Session</span> <span class="n">session</span> <span class="o">=</span> <span class="n">Session</span><span class="o">.</span><span class="na">getDefaultInstance</span><span class="o">(</span><span class="n">props</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>        <span class="n">session</span><span class="o">.</span><span class="na">setDebug</span><span class="o">(</span><span class="n">debug</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// create a message  </span>
</span><span class='line'>        <span class="n">Message</span> <span class="n">msg</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MimeMessage</span><span class="o">(</span><span class="n">session</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// set the from and to address  </span>
</span><span class='line'>        <span class="n">InternetAddress</span> <span class="n">addressFrom</span> <span class="o">=</span> <span class="k">new</span> <span class="n">InternetAddress</span><span class="o">(</span><span class="n">from</span><span class="o">);</span>
</span><span class='line'>        <span class="n">msg</span><span class="o">.</span><span class="na">setFrom</span><span class="o">(</span><span class="n">addressFrom</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">InternetAddress</span><span class="o">[]</span> <span class="n">addressTo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">InternetAddress</span><span class="o">[</span><span class="n">recipients</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span> <span class="n">recipients</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
</span><span class='line'>        <span class="o">{</span>
</span><span class='line'>            <span class="n">addressTo</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="n">InternetAddress</span><span class="o">(</span><span class="n">recipients</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">msg</span><span class="o">.</span><span class="na">setRecipients</span><span class="o">(</span><span class="n">Message</span><span class="o">.</span><span class="na">RecipientType</span><span class="o">.</span><span class="na">TO</span><span class="o">,</span> <span class="n">addressTo</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Optional : You can also set your custom headers in the Email if you Want  </span>
</span><span class='line'>        <span class="n">msg</span><span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;MyHeaderName&quot;</span><span class="o">,</span> <span class="s">&quot;myHeaderValue&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Setting the Subject and Content Type  </span>
</span><span class='line'>        <span class="n">msg</span><span class="o">.</span><span class="na">setSubject</span><span class="o">(</span><span class="n">subject</span><span class="o">);</span>
</span><span class='line'>        <span class="n">msg</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">message</span><span class="o">,</span> <span class="s">&quot;text/plain&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Transport</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">msg</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>19.发送代数据的HTTP 请求
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.net.URL</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span>  <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">URL</span> <span class="n">my_url</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="s">&quot;http://coolshell.cn/&quot;</span><span class="o">);</span>
</span><span class='line'>                <span class="n">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="n">InputStreamReader</span><span class="o">(</span><span class="n">my_url</span><span class="o">.</span><span class="na">openStream</span><span class="o">()));</span>
</span><span class='line'>                <span class="n">String</span> <span class="n">strTemp</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>                <span class="k">while</span><span class="o">(</span><span class="kc">null</span> <span class="o">!=</span> <span class="o">(</span><span class="n">strTemp</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">())){</span>
</span><span class='line'>                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">strTemp</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">ex</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>20.改变数组的大小
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>    <span class="cm">/** </span>
</span><span class='line'><span class="cm">    * Reallocates an array with a new size, and copies the contents </span>
</span><span class='line'><span class="cm">    * of the old array to the new array. </span>
</span><span class='line'><span class="cm">    * @param oldArray  the old array, to be reallocated. </span>
</span><span class='line'><span class="cm">    * @param newSize   the new array size. </span>
</span><span class='line'><span class="cm">    * @return          A new array with the same contents. </span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="n">Object</span> <span class="nf">resizeArray</span> <span class="o">(</span><span class="n">Object</span> <span class="n">oldArray</span><span class="o">,</span> <span class="kt">int</span> <span class="n">newSize</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>       <span class="kt">int</span> <span class="n">oldSize</span> <span class="o">=</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">reflect</span><span class="o">.</span><span class="na">Array</span><span class="o">.</span><span class="na">getLength</span><span class="o">(</span><span class="n">oldArray</span><span class="o">);</span>
</span><span class='line'>       <span class="n">Class</span> <span class="n">elementType</span> <span class="o">=</span> <span class="n">oldArray</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getComponentType</span><span class="o">();</span>
</span><span class='line'>       <span class="n">Object</span> <span class="n">newArray</span> <span class="o">=</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">reflect</span><span class="o">.</span><span class="na">Array</span><span class="o">.</span><span class="na">newInstance</span><span class="o">(</span>
</span><span class='line'>             <span class="n">elementType</span><span class="o">,</span><span class="n">newSize</span><span class="o">);</span>
</span><span class='line'>       <span class="kt">int</span> <span class="n">preserveLength</span> <span class="o">=</span> <span class="n">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">oldSize</span><span class="o">,</span><span class="n">newSize</span><span class="o">);</span>
</span><span class='line'>       <span class="k">if</span> <span class="o">(</span><span class="n">preserveLength</span> <span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="mi">0</span><span class="o">)</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">arraycopy</span> <span class="o">(</span><span class="n">oldArray</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="n">newArray</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="n">preserveLength</span><span class="o">);</span>
</span><span class='line'>       <span class="k">return</span> <span class="n">newArray</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Test routine for resizeArray().  </span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span> <span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>       <span class="kt">int</span><span class="o">[]</span> <span class="n">a</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">};</span>
</span><span class='line'>       <span class="n">a</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">[])</span><span class="n">resizeArray</span><span class="o">(</span><span class="n">a</span><span class="o">,</span><span class="mi">5</span><span class="o">);</span>
</span><span class='line'>       <span class="n">a</span><span class="o">[</span><span class="mi">3</span><span class="o">]</span> <span class="o">=</span> <span class="mi">4</span><span class="o">;</span>
</span><span class='line'>       <span class="n">a</span><span class="o">[</span><span class="mi">4</span><span class="o">]</span> <span class="o">=</span> <span class="mi">5</span><span class="o">;</span>
</span><span class='line'>       <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">a</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span> <span class="o">(</span><span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java构造时成员初始化的陷阱]]></title>
    <link href="http://chenming142.github.com/blog/2013/03/08/java-constructor-trap/"/>
    <updated>2013-03-08T22:21:00+08:00</updated>
    <id>http://chenming142.github.com/blog/2013/03/08/java-constructor-trap</id>
    <content type="html"><![CDATA[<blockquote><p>原文:<a href="http://blog.csdn.net/haoel/article/details/4319793" title="陈皓专栏">http://blog.csdn.net/haoel/article/details/4319793</a></p></blockquote>

<p>让我们先来看两个类: <strong>Base</strong> 和 <strong>Derived</strong> 类.注意其中的 <em>whenAmISet</em> 的成员变量,和方法 <em>preProcess()</em>.
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Base</span><span class="o">{</span>
</span><span class='line'>    <span class="n">Base</span><span class="o">(){</span>
</span><span class='line'>        <span class="n">preProcess</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kt">void</span> <span class="nf">preProcess</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Derived</span> <span class="kd">extends</span> <span class="n">Base</span><span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="n">whenAmISet</span> <span class="o">=</span> <span class="s">&quot;set when declared&quot;</span><span class="o">;</span>
</span><span class='line'>    <span class="nd">@Override</span> <span class="kt">void</span> <span class="n">preProcess</span><span class="o">(){</span>
</span><span class='line'>        <span class="n">whenAmISet</span> <span class="o">=</span> <span class="s">&quot;set in preProcess()&quot;</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
如果我们构造一个子类实例,那么 <strong>whenAmISet</strong> 的值会是什么呢?
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Java Syntax </span><a href='http://j.mp/pPUUmW'>MDN Documentation </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="kr">public</span> <span class="kr">class</span> <span class="nx">Main</span><span class="p">{</span>
</span><span class='line'>    <span class="kr">public</span> <span class="kr">static</span> <span class="k">void</span> <span class="nx">main</span><span class="p">(</span><span class="nb">String</span><span class="p">[]</span> <span class="nx">args</span><span class="p">){</span>
</span><span class='line'>        <span class="nx">Derived</span> <span class="nx">d</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Derived</span><span class="p">();</span>
</span><span class='line'>        <span class="nx">System</span><span class="p">.</span><span class="nx">out</span><span class="p">.</span><span class="nx">println</span><span class="p">(</span> <span class="nx">d</span><span class="p">.</span><span class="nx">whenAmISet</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
再续继往下阅读之前，请先给自己一些时间想一下上面的这段程序的输出是什么？是的，这看起来的确相当简单，甚至不需要编译和运行上面的代码，我们也应该知道其答案，那么，你觉得你知道答案吗？你确定你的答案正确吗？</p>

<p>很多人都会觉得那段程序的输出应该是<code>set in preProcess()</code>，这是因为当子类Derived 的构造函数被调用时，其会隐晦地调用其基类Base的构造函数（通过super()函数），于是基类Base的构造函数会调用preProcess() 函数，因为这个类的实例是Derived的，而且在子类Derived中对这个函数使用了override关键字，所以，实际上调用到的是：<code>Derived.preProcess()</code>，而这个方法设置了whenAmISet 成员变量的值为：<code>set in preProcess()</code>。</p>

<p>当然，上面的结论是错误的。如果你编译并运行这个程序，你会发现，程序实际输出的是<code>set when declared</code>。怎么为这样呢？难道是基类Base 的preProcess() 方法被调用啦？也不是！你可以在基类的preProcess中输出点什么看看，你会发现程序运行时，<strong>Base.preProcess()</strong> 并没有被调用到（不然这对于Java所有的应用程序将会是一个极具灾难性的Bug）</p>

<!-- more -->


<p>虽然上面的结论是错误的，但推导过程是合理的，只是不完整，下面是整个运行的流程：</p>

<pre><code>1. 进入 Derived 构造函数
2. Derived 成员变量的内存被分配
3. Base 构造函数被隐含的调用
4. Base 构造函数调用 preProcess()
5. Derived 的 preProcess() 设置 whenAmISet 值为"set in preProcess()"
6. Derived 的成员变量初始化被调用
7. 执行 Dervied 构造函数体
</code></pre>

<p>等一等，这怎么可能？在第6步，<strong>Derived</strong> 成员的初始化居然在 <strong>preProcess()</strong> 调用之后？<br/>
是的，正是这样，我们不能让成员变量的声明和初始化变成一个原子操作，虽然在Java中我们可以把其写在一起，让其看上去像是声明和初始化一体。<strong>但这只是假象，我们的错误就在于我们把Java中的声明和初始化看成了一体</strong> 。在C++的世界中，C++并不支持成员变量在声明的时候进行初始化，其需要你在构造函数中显式的初始化其成员变量的值，看起来很土，但其实C++用心良苦。</p>

<p>在面向对象的世界中，因为程序以对象的形式出现，导致了我们对程序执行的顺序雾里看花。<strong>所以，在面向对象的世界中，程序执行的顺序相当的重要</strong> 。</p>

<p>下面是对上面各个步骤的逐条解释:</p>

<pre><code>1. 进入构造函数。
2. 为成员变量分配内存。
3. 除非你显式地调用super()，否则Java 会在子类的构造函数最前面偷偷地插入super() 。
4. 调用父类构造函数。
5. 调用preProcess，因为被子类override，所以调用的是子类的。
6. 于是，初始化发生在了preProcess()之后。  
   这是因为，Java需要保证父类的初始化早于子类的成员初始化，否则，在子类中使用父类的成员变量就会出现问题。
7. 正式执行子类的构造函数（当然这是一个空函数，居然我们没有声明）。
</code></pre>

<p>你可以查看 <a href="http://java.sun.com/docs/books/jls/third_edition/html/execution.html#12.5," title="相关章节">《Java语言的规格说明书》</a> 来了解更多的Java创建对象时的细节。<br/>
C++的程序员应该都知道，在C++的世界中在<code>构造函数中调用虚函数</code>是不行的，Effective C++ 条款9：Never call virtual functions during construction or destruction，Scott Meyers已经解释得很详细了。</p>

<p>在语言设计的时候，<strong>“在构造函数中调用虚函数”</strong>是个两难的问题:</p>

<pre><code>1. 如果调用的是父类的函数的话，这个有点违反虚函数的定义。  
2. 如果调用的是子类的函数的话，这可能产生问题的：
     因为在构造子类对象的时候，首先调用父类的构造函数,而这时候如果去调用子类的函数  
     由于子类还没有构造完成，子类的成员尚未初始化，这么做显然是不安全的。
</code></pre>

<p>C++选择了第一种，而Java选择了第二种。</p>

<pre><code>C++类的设计相对比较简陋，通过虚函数表来实现，缺少类的元信息。
而Java类的则显得比较完整，有super指针来导航到父类。
</code></pre>

<p>最后，需要向大家推荐一本书，Joshua Bloch 和 Neal Gafter 写的 <code>Java Puzzlers: Traps, Pitfalls, and Corner Cases</code> ，中文版<code>《JAVA解惑 》</code>。</p>
]]></content>
  </entry>
  
</feed>
